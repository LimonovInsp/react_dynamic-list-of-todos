{"version":3,"sources":["api.ts","TodosList.tsx","ListButton.tsx","ListSortButtons.tsx","App.tsx","index.tsx"],"names":["fetchTodos","a","fetch","response","json","fetchUsers","fetchData","todos","users","data","map","todo","user","find","id","userId","TodosList","className","key","name","type","checked","completed","title","ListButton","handleButtonLoad","onClick","ListSortButtons","handleSortByTitle","handleSortByName","handleSortByCompleted","App","useState","setTodos","isLoading","setIsLoading","isLoaded","setIsLoaded","then","prev","sort","b","localeCompare","Number","alt","src","ReactDOM","render","document","getElementById"],"mappings":"ySAKaA,EAAU,uCAAG,4BAAAC,EAAA,sEACDC,MAJP,2CAGQ,cAClBC,EADkB,yBAGjBA,EAASC,QAHQ,2CAAH,qDAMVC,EAAU,uCAAG,4BAAAJ,EAAA,sEACDC,MATP,2CAQQ,cAClBC,EADkB,yBAGjBA,EAASC,QAHQ,2CAAH,qDAMVE,EAAS,uCAAG,8BAAAL,EAAA,sEACHD,IADG,cACjBO,EADiB,gBAEHF,IAFG,cAEjBG,EAFiB,yBAIhBD,EAAME,KAAKC,KAAI,SAACC,GAAD,mBAAC,eAClBA,GADiB,IAEpBC,KAAMJ,EAAMC,KAAKI,MAAK,SAACD,GAAD,OAAgBA,EAAKE,KAAOH,EAAKI,gBANlC,2CAAH,qDCVTC,EAAqC,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAH,OAChD,4BACGA,EAAMG,KAAI,SAAAC,GAAI,OACb,wBAAIM,UAAU,WAAWC,IAAKP,EAAKG,IACjC,8BAAOH,EAAKC,KAAKO,MACjB,8BACE,2BACEF,UAAU,eACVG,KAAK,WACLC,SAA4B,IAAnBV,EAAKW,YAEfX,EAAKY,aCZHC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAH,OACzC,4BACEL,KAAK,SACLM,QAAS,kBAAMD,KACfR,UAAU,iCAHZ,SCCWU,EAAmC,SAAC,GAAD,IAC9CC,EAD8C,EAC9CA,kBACAC,EAF8C,EAE9CA,iBACAC,EAH8C,EAG9CA,sBAH8C,OAK9C,yBAAKb,UAAU,oBACb,4BACEG,KAAK,SACLM,QAAS,kBAAME,KACfX,UAAU,yCAHZ,iBAOA,4BACES,QAAS,kBAAMI,KACfV,KAAK,SACLH,UAAU,yCAHZ,qBAOA,4BACEG,KAAK,SACLM,QAAS,kBAAMG,KACfZ,UAAU,yCAHZ,kBC2CWc,EA/DO,WAAO,IAAD,EACAC,mBAAyB,IADzB,mBACnBzB,EADmB,KACZ0B,EADY,OAEQD,oBAAS,GAFjB,mBAEnBE,EAFmB,KAERC,EAFQ,OAGMH,oBAAS,GAHf,mBAGnBI,EAHmB,KAGTC,EAHS,KAKpBZ,EAAgB,uCAAG,sBAAAxB,EAAA,6DACvBkC,GAAa,GADU,SAGjB7B,IAAYgC,MAAK,SAAA7B,GACrBwB,EAASxB,GACT0B,GAAa,GACbE,GAAY,MANS,2CAAH,qDAUhBT,EAAoB,WACxBK,GAAS,SAAAM,GAAI,OAAI,YAAIA,GAAMC,MAAK,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAEsB,MAAMmB,cAAcD,EAAElB,cAG9DO,EAAwB,WAC5BG,GAAS,SAAAM,GAAI,OAAI,YAAIA,GAAMC,MAAK,SAACvC,EAAGwC,GAAJ,OAAUE,OAAOF,EAAEnB,WAAaqB,OAAO1C,EAAEqB,kBAGrEO,EAAmB,WACvBI,GAAS,SAAAM,GAAI,OAAI,YAAIA,GAAMC,MAAK,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAEW,KAAKO,KAAKuB,cAAcD,EAAE7B,KAAKO,aAgC7E,OACE,yBAAKF,UAAU,OA7BXiB,IAAcE,EAEd,yBACEnB,UAAU,cACV2B,IAAI,UACJC,IAAI,6CAKLX,GAAaE,EAEd,oCACE,kBAAC,EAAD,CACER,kBAAmBA,EACnBC,iBAAkBA,EAClBC,sBAAuBA,IAEzB,kBAAC,EAAD,CAAWvB,MAAOA,KAMtB,kBAAC,EAAD,CAAYkB,iBAAkBA,MCxDpCqB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.36606e48.chunk.js","sourcesContent":["import { Todo, User } from './interfaces';\n\nconst TODOS_URL = 'https://mate.academy/students-api/todos';\nconst USERS_URL = 'https://mate.academy/students-api/users';\n\nexport const fetchTodos = async () => {\n  const response = await fetch(TODOS_URL);\n\n  return response.json();\n};\n\nexport const fetchUsers = async () => {\n  const response = await fetch(USERS_URL);\n\n  return response.json();\n};\n\nexport const fetchData = async () => {\n  const todos = await fetchTodos();\n  const users = await fetchUsers();\n\n  return todos.data.map((todo: Todo) => ({\n    ...todo,\n    user: users.data.find((user: User) => user.id === todo.userId),\n  }));\n};\n","import React from 'react';\nimport { TodoWithUser } from './interfaces';\n\ninterface TodoListProps {\n  todos: TodoWithUser[];\n}\n\nexport const TodosList: React.FC<TodoListProps> = ({ todos }) => (\n  <ul>\n    {todos.map(todo => (\n      <li className=\"App_todo\" key={todo.id}>\n        <span>{todo.user.name}</span>\n        <span>\n          <input\n            className=\"App_checkbox\"\n            type=\"checkbox\"\n            checked={todo.completed === true}\n          />\n          {todo.title}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\n\ninterface Props {\n  handleButtonLoad: () => void;\n}\n\nexport const ListButton: React.FC<Props> = ({ handleButtonLoad }) => (\n  <button\n    type=\"button\"\n    onClick={() => handleButtonLoad()}\n    className=\"App_button App_button__vinous\"\n  >\n    Load\n  </button>\n);\n","import React from 'react';\n\ninterface Props {\n  handleSortByTitle: () => void;\n  handleSortByName: () => void;\n  handleSortByCompleted: () => void;\n}\n\nexport const ListSortButtons: React.FC<Props> = ({\n  handleSortByTitle,\n  handleSortByName,\n  handleSortByCompleted,\n}) => (\n  <div className=\"App_sort-buttons\">\n    <button\n      type=\"button\"\n      onClick={() => handleSortByTitle()}\n      className=\"App_sort-button App_button__turquoise\"\n    >\n      Sort by title\n    </button>\n    <button\n      onClick={() => handleSortByCompleted()}\n      type=\"button\"\n      className=\"App_sort-button App_button__turquoise\"\n    >\n      Sort by completed\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => handleSortByName()}\n      className=\"App_sort-button App_button__turquoise\"\n    >\n      Sort by name\n    </button>\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { TodoWithUser } from './interfaces';\nimport { fetchData } from './api';\nimport { TodosList } from './TodosList';\nimport { ListButton } from './ListButton';\nimport { ListSortButtons } from './ListSortButtons';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const handleButtonLoad = async () => {\n    setIsLoading(true);\n\n    await fetchData().then(data => {\n      setTodos(data);\n      setIsLoading(false);\n      setIsLoaded(true);\n    });\n  };\n\n  const handleSortByTitle = () => {\n    setTodos(prev => [...prev].sort((a, b) => a.title.localeCompare(b.title)));\n  };\n\n  const handleSortByCompleted = () => {\n    setTodos(prev => [...prev].sort((a, b) => Number(b.completed) - Number(a.completed)));\n  };\n\n  const handleSortByName = () => {\n    setTodos(prev => [...prev].sort((a, b) => a.user.name.localeCompare(b.user.name)));\n  };\n\n  const showStateLoaded = () => {\n    if (isLoading && !isLoaded) {\n      return (\n        <img\n          className=\"App_loading\"\n          alt=\"rolling\"\n          src=\"https://s7.gifyu.com/images/rolling.gif\"\n        />\n      );\n    }\n\n    if (!isLoading && isLoaded) {\n      return (\n        <>\n          <ListSortButtons\n            handleSortByTitle={handleSortByTitle}\n            handleSortByName={handleSortByName}\n            handleSortByCompleted={handleSortByCompleted}\n          />\n          <TodosList todos={todos} />\n        </>\n      );\n    }\n\n    return (\n      <ListButton handleButtonLoad={handleButtonLoad} />\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      {showStateLoaded()}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}